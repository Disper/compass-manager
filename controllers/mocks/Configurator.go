// Code generated by mockery v2.36.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Configurator is an autogenerated mock type for the Configurator type
type Configurator struct {
	mock.Mock
}

// ConfigureCompassRuntimeAgent provides a mock function with given fields: kubeconfig, runtimeID
func (_m *Configurator) ConfigureCompassRuntimeAgent(kubeconfig string, runtimeID string) error {
	ret := _m.Called(kubeconfig, runtimeID)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(kubeconfig, runtimeID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateCompassRuntimeAgent provides a mock function with given fields: kubeconfig
func (_m *Configurator) UpdateCompassRuntimeAgent(kubeconfig string) error {
	ret := _m.Called(kubeconfig)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(kubeconfig)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewConfigurator creates a new instance of Configurator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewConfigurator(t interface {
	mock.TestingT
	Cleanup(func())
}) *Configurator {
	mock := &Configurator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
